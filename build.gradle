plugins {
    id 'java'
    id 'maven-publish'
}

def getGitRef() {
    try {
        final def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (final Throwable ignored) {
        return 'unknown'
    }
}

version = "${semver}+${getGitRef()}"
group = 'li.cil.sedna'

java.toolchain {
    languageVersion = JavaLanguageVersion.of(17)
    vendor = JvmVendorSpec.ADOPTOPENJDK
}

repositories {
    mavenCentral()
    maven {
        url = uri("https://maven.pkg.github.com/fnuecke/ceres")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GPR_USER")
            password = project.findProperty("gpr.key") ?: System.getenv("GPR_KEY")
        }
        content { includeGroup "li.cil.ceres" }
    }
}

dependencies {
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
    testCompileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    implementation 'commons-io:commons-io:2.11.0'
    implementation 'it.unimi.dsi:fastutil:8.5.6'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.15.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.15.0'
    implementation 'org.ow2.asm:asm-commons:9.1'
    implementation 'org.ow2.asm:asm:9.1'

    implementation 'li.cil.ceres:ceres:0.0.4'

    testImplementation 'org.mockito:mockito-core:4.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = semver
            artifact jar
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = System.getenv("GITHUB_MAVEN_URL") ?: ""
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

test {
    useJUnitPlatform()
}
